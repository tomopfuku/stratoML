best_hr.2.support.tree_tablemicrasteridae-stratigraphy_global.csv
best_hr.2.tremicrasteridae-stratocladistic.tre
best_hr.2.tree_tablemicrasteridae-stratophenetic.tre
best_hr.3.supportn_excess_states.tab
best_hr.3.support.tree_tableno_americanus
best_hr.3.treorig_data
best_hr.3.tree_tableplot_tree_gg.R
best_hr.NSTATESrange_times.csv
best_hr.supportbest_hr.suprebest_hr.supportbest_hr.suprebest_hr.supportbest_hr.suprebest_hr.tbesbest_best_hr.supportbest_hr.suprebest_hr.supportbeesbest_hrcabest_hr.supportbest_hr.suprebesybest_hr.supportbest_hr.suprebest_hr.supportbest_hr.suprebest_hr.supportbest_hr.supr % best_hr.supportbest_hr.supombest_hr.supportbest_hr.suprebest_hr.supe-stratigraphy_abs.csv
tomo@monarch micraster %tomo@monarch micraster %tomo@monarc "tomo@monarch micraster %tomo@monarch mindationtomo@monarch micraster %tomo@monarch micch64-aptomo@monarch micraster %tomo@monarch micrastith ABtomo@monarch micraster %tomo@monarcme totomo@monarch micraster %tomo@monarch micraster %toicenstomo@monarch micraster %tomo@monarch micraster %tomo@monarc "tomo@sutomo@monarch micraster %tomo@monarch micrais a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publ'citation()' on 'demo()' fo'citation()' on how to cite R or R help, or
'help.start()' for an HTML br'help.start()' for an HTML br'help.start()' for an HTML br'help.start()' for an HTML br'help.start()' for an HTML br'help.start()' for an HTML br'help.start()' for an HTML br'help.start()' for an HTML br'help.start()' for an HTML br'help.start()' for an HTML br'help.start()' for an HTML br'help.start()' for an HTML br'help.start()' for an HTML br'help.start()' f  'help.start()' for an HTML br'help.start()' for an HTML br'help.start()' for an HTML br'help.start()' for an HTML br'help.start()' for an HTML br'help.start()' for an HTML br'help.start()' for an HTML br'help.start()' for an HTML br'help.start()' for an HTML br'help.start()' for an HTML br'help.start()' for an HTML br'help.start()' for an HTML br'help.start()' for an HTML br'help.start()' f  'help.start()' for an HTML br'help.start()' for an HTML br'he read.csv("micrasteridae-stratigraphy_abs.csv",sep 'help.start()' for an HTML br'help.start()' for an HTML br'help.start()' for an HTML br'help.start()' for an HTML br'aster   95.550 89.800    5.750
Micraster_laxoporus       88.050 70.575   17.475
Micraster_carentonensis   85.625 77.850    7.775
Micraster_turonensis      87.175 83.600    3.575
Micraster_rogalae         87.175 85.625    1.550
Micraster_schroederi      83.600 69.050   14.550
Micraster_quebrada        84.950 84.275    0.675
Micraster_brevis          89.800 85.625    4.175
Micraster_woodi           90.825 89.800    1.025
Micraster_uddeni          85.625 84.950    0.675
Micraster_americanus      72.100 67.525    4.575
Gibbaster_gibbus          85.625 74.975   10.650
Gibbaster_senonensus      77.850 72.100    5.750
Ovulaster_zignoi          72.100 66.000    6.100
Ovulaster_auberti         77.850 69.050    8.800
Ovulaster_reticulatus     72.100 69.050    3.050
Turanglaster_nazkii       83.600 72.100   11.500
> strat$species = nstates$species
Error in `$<-.data.frame`(`*tmp*`, species, value = c("coranguinum", "cortesudinarium",  :
  replacement has 17 rows, data has 21
> strat = subset(strat,row.names(strat) %in% nstat> strat = subset(strat,r[1> strat = subset(strat,row.names(strat) %in% ns  > strat = subset(strat,row.names(strat) %in% ns  > strat = subset(strat,row.names(strat) %in% ns83> strat = subset(strat,row.names(strat) %in% nudi> strat = subset(strat,row.names(strat) %in% nsic> strat = subset(strat,row.names(strat) %in%     > strat = subset(strat,row.names(strat) %in% ns9.> strat = subset(strat,row.names(strat) %in% nss > strat = subset(strat,row.names(strat) %in% nscr> strat = subset(strat,row.names(strat) %in% nsca> strat = subset(strat,row.names(strat) %in% n3.6> strat = subset(strat,row.names(strat) %in% ns  > strat = subset(strat,row.names(strat) %in% ncra> strat = subset(strat,row.names(strat) %in% n   > strat = subset(strat,row.names(strat) %in% ns27> strat = subset(strat,row.names(strat) %in% n   > strat = subset(strat,row.name   > strat = subset(strat,row.names(strat) %in% nstat> strat = subset(strat,r[1> strat = suben> strat = subset(strat,row.names(str se       Micraster_brevis       7          18          brevis
12          Gibbaster_gibbus       5           7          gibbus
13      Gibbaster_senonensus       5           5      senonensus
14          Ovulaster_zignoi       0           0          zignoi
15         Ovulaster_auberti       0           0         auberti
16     Ovulaster_reticulatus       0           0     reticulatus
17       Turanglaster_nazkii       0          NA          nazkii
> row.names(nstates) = nstates$taxon
> head(nstates)
                                              taxon nstates par_nstates
Micraster_coranguinum         Micraster_coranguinum       7          18
Micraster_cortesudinarium Micraster_cortesudinarium      18          13
Micraster_leskei                   Micraster_leskei      13           3
Micraster_michelini             Micraster_michelini       3          NA
Micraster_laxoporus             Micraster_laxoporus       3           3
Micraster_carentonensis     Micraster_carentonensis       3           3
                                                                           an                                                              kei                                                               li                                                              nen                                                                                                                               ] s                                                               ,b                                                                                                                           ba                                                                      as                                                                                                                                              ic                                                                                                                                              um                                                                      poatus       0           0
16          Ovulaster_zignoi          Ovulaster_zignoi       0           0
17       Turanglaster_nazkii       Turanglaster_nazkii       0          NA
           species    fad    lad duration
1           gibbus 85.625 74.975   10.650
2       senonensus 77.850 72.100    5.750
3           brevis 89.800 85.625    4.175
4    carentonensis 85.625 77.850    7.775
5      coranguinum 88.050 83.600    4.450
6  cortesudinarium 90.825 86.300    4.525
7        laxoporus 88.050 70.575   17.475
8           leskei 92.875 88.050    4.825
9        michelini 95.550 89.800    5.750
10        quebrada 84.950 84.275    0.675
11         rogalae 87.175 85.625    1.550
12      schroederi 83.600 69.050   14.550
13      turonensis 87.175 83.600    3.575
14         auberti 77.850 69.050    8.800
15     reticulatus 72.100 69.050    3.050
16          zignoi 72.100 66.000    6.100
17          nazkii 83.600 72.100   11.500
> comb = merge(nstates,strat,by = 0)
> head(comb)
                  Row.names                                  Row._ns                  Row.names                                  Row._ns                         Row.names                                  Row._ns                         Row.names              M                  Row.names             Mi                  Row.names             on                  Row.names            er_                  Row.names                                 Row.names            riu                  Row.names                                 Row.names           dura                  Row.names             0.                  Row.names            5.7                  Row.names             17                  Row.names             75                  Row.names             0
                  Row.names             
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                         es                                        "                                        _y"                                   ym           ar                                         es                                        "                                        _y"                                   ym           ar                                         es                                        "                                        _y"                                   ym           ar                                         es                                        "                                        _y"                                   ym           ar                                         es                                        "                                        _y"                                   ym           ar                                         es                                                  s                                           _ter_leskei      13           3
Micraster_michelini             Micraster_michelini       3          NA
Micraster_laxoporus             Micraster_laxoporus       3           3
Micraster_carentonensis     Micraster_carentonensis       3           3
Micraster_quebrada               Micraster_quebrada       5           3
Micraster_turonensis           Micraster_turonensis       9          18
Micraster_rogalae                 Micraster_rogalae       3           9
Micraster_schroederi           Micraster_schroederi      17          18
Micraster_brevis                   Micraster_brevis       7          18
Gibbaster_gibbus                   Gibbaster_gibbus       5           7
Gibbaster_senonensus           Gibbaster_senonensus       5           5
Ovulaster_zignoi                   Ovulaster_zignoi       0           0
Ovulaster_auberti                 Ovulaster_auberti       0           0
Ovulaster_reticulatus         Ovulaster_reticulatus       0           0
Turanglaster_nazkii             Turanglaster_nazkii       Turanglaster_nazkii           Turanglaster_nazkii             Turanglaster_nazkii       TuranglasteicrTuranglaster_nazkii             Turanglaster_nazkii       Turanglast    Turanglaster_nazkii             Turanglaster_nazkii       Turanglaster  Turanglaster_nazkii             Turanglaster_nazkii       Turanglasterr_Turanglaster_nazkii             Turanglaster_nazkii       TuranglastensiTuranglaster_nazkii             Turanglaster_nazkii       Turanglaster  Turanglaster_nazkii             Turanglaster_nazkii       TuranglasterusTuranglaster_nazkii             Turanglaster_nazkii       TuranglasterulTuranglaster_nazkii             Turanglaster_nazkii       Turanglaste   Turanglaster_nazkii             Turanglaster_nazkii       Turanglaster  Turanglaster_nazkii             Turanglaster_nazkii       TuranglasteratTuranglaster_nazkii             Turanglaster_nazkii       TuranglastebliTuranglaster_nazkii             Turanglaster_nazkii       Turanglasterr)ntributors()' for more information and
'citation()' on how to cite R or R packages in publications.
Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.
5[Previously saved workspace restored]
> 520/.8
[1] 650
> quit()
Save workspace image? [y/n/c]: n
tomo@monarch micraster % R
R version 4.4.0 (2024-04-24) -- "Puppy Cup"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: aarch64-apple-darwin20
R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.
  Natural language support but running in an English locale
R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.
Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
merge(nstates,strat,by=0)
comb  = merge(nstates,strat,by=0
)
plot(comb$duration,comb$nstates)
plot(comb$duration,comb$par_nstates)
plot(comb$duration,comb$nstates)
plot(comb$duration,comb$nstates)
plot(comb$nstates,comb$duration)
plot(comb$nstates,comb$duration,xlab="num. character states", ylab = "species duration")
plot(comb$nstates,comb$duration,xlab="# character states", ylab = "species duration")
comb
comb[1:13,]
subcomb = comb[1:13,]
plot(sub_comb$nstates,sub_comb$duration,xlab="# character states", ylab = "species duration")
plot(subcomb$nstates,subcomb$duration,xlab="# character states", ylab = "species duration")
fit = lm(subcomb$duration~subcomb$nstates)
abline(fit)
summary(fit)
text(subcomb$nstates,subcomb$duration,labels=row.names(subcomb))
text(subcomb$nstates,subcomb$duration,labels=subcomb$Row.names)
plot(subcomb$nstates,subcomb$duration,xlab="# character states", ylab = "species duration")
abline(fit)
svg("~/Dropbox/projects/echino/micraster_MS/figures/fig6.svg")
plot(subcomb$nstates,subcomb$duration,xlab="# character states", ylab = "species duration")
abline(fit)
dev.off()
plot(subcomb$nstates,subcomb$duration,xlab="# character states", ylab = "species duration")
abline(fit)
png("~/Dropbox/projects/echino/micraster_MS/figures/fig6.png")
plot(subcomb$nstates,subcomb$duration,xlab="# character states", ylab = "species duration")
abline(fit)
dev.off()
subcomb
subcomb[-9:10,]
subcomb[-9,]
subcomb = subcomb[-9,]
subcomb[-9,]
subcomb
subcomb[-10,]
subcomb[-9,]
subcomb[,]
subcomb[-9,]
subcomb[,]
subcomb[-9,]
subcomb = subcomb[-9,]
subcomb = subcomb[-7,]
subcomb
nrow(subcomb)
subcomb = subcomb[-4,]
subcomb
nrow(subcomb)
plot(subcomb$nstates,subcomb$duration,xlab="# character states", ylab = "species duration")
fit = lm(subcomb$duration~subcomb$nstates)
abline(fit)
summary(fit)
svg("~/Dropbox/projects/echino/micraster_MS/figures/fig6.svg")
plot(subcomb$nstates,subcomb$duration,xlab="# character states", ylab = "species duration")
abline(fit)
dev.off()
plot(subcomb$duration,subcomb$nstates,xlab="# character states", ylab = "species duration")
fit = lm(subcomb$nstates ~ subcomb$duration)
summary(fit)
abline(fit)
quit()
 tab = read.csv("best_mfc2.tree_table")
source("plot_tree_gg.R")
p
 tab = read.csv("best_mfc2.tree_table")
source("plot_tree_gg.R")
p
 tab = read.csv("best_mfc2.tree_table")
source("plot_tree_gg.R")
p
 tab = read.csv("best_mfc2.tree_table")
source("plot_tree_gg.R")
p
 tab = read.csv("best_mfc2.tree_table")
source("plot_tree_gg.R")
p
source("plot_tree_gg.R")
p
head(tab)
source("plot_tree_gg.R")
p
source("plot_tree_gg.R")
p
source("plot_tree_gg.R")
p
 tab = read.csv("best_mfc2.tree_table")
source("plot_tree_gg.R")
p
tab = read.csv("best_mfc2.tree_table")a
tab = read.csv("best_mfc2.tree_table")
source("plot_tree_gg.R")
p
svg("best_mfc2.svg")
source("plot_tree_gg.R")
p
dev.off()
tab = read.csv("best_mfc2.2nd.tree_table")
source("plot_tree_gg.R")
p
svg("best_mfc2.2nd.svg")
p
dev.off()
svg("best_mfc2.3rd.tre")
dev.off()
tab = read.csv("best_mfc2.3rd.tre")
tab = read.csv("best_mfc2.3rd.tree_table")
svg("best_mfc2.3rd.tre")
svg("best_mfc2.3rd.svg")
tab = read.csv("best_mfc2.3rd.tree_table")
source("plot_tree_gg.R")
p
dev.off()
p
p
quit()
p
tab = read.csv("best_mfc2.3rd.tree_table")
source("plot_tree_gg.R")
p
tab = read.csv("best_mfc2.3rd.tree_table")
source("plot_tree_gg.R")
p
svg("best_mfc2.3rd.svg")
p
dev.off()
tab = read.csv("best_mfc2.2nd.tree_table")
source("plot_tree_gg.R")
p
tab = read.csv("best_mfc2.2nd.tree_table")
source("plot_tree_gg.R")
p
tab = read.csv("best_mfc2.2nd.tree_table")
source("plot_tree_gg.R")
p
svg("best_mfc2.2nd.svg")
source("plot_tree_gg.R")
p
dev.off()
quit()
tab = read.csv("best_mfc2.tree_table")
source("plot_tree_gg.R")
p
p
svg("best_mfc2.2nd.svg")
source("plot_tree_gg.R")
p
dev.off()
tab = read.csv("best_mfc2.2nd.tree_table")
source("plot_tree_gg.R")
p
svg("best_mfc2.2nd.svg")
p
dev.off()
tab = read.csv("best_mfc2.3rd.tree_table")
source("plot_tree_gg.R")
p
tab = read.csv("best_mfc2.tree_table")
source("plot_tree_gg.R")
p
tab = read.csv("best_mfc2.2nd.tree_table")
source("plot_tree_gg.R")
p
tab = read.csv("best_mfc2.3rd.tree_table")
svg("best_mfc2.3rd.svg")
source("plot_tree_gg.R")
p
dev.off()
svg("best_mfc2.3rd.svg")
dev.off()
tab = read.csv("best_mfc2.3rd.tree_table")
source("plot_tree_gg.R")
p
tab = read.csv("best_mfc2.3rd.tree_table")
source("plot_tree_gg.R")
p
svg("best_mfc2.3rd.svg")
p
dev.off()
tab = read.csv("best_mfc2.2nd.tree_table")
source("plot_tree_gg.R")
p
tab = read.csv("best_mfc2.2nd.tree_table")
source("plot_tree_gg.R")
p
tab = read.csv("best_mfc2.2nd.tree_table")
source("plot_tree_gg.R")
p
svg("best_mfc2.2nd.svg")
p
dev.off()
quit()
tab = read.csv("best_mfc2.tree_table")
source("plot_tree_gg.R")
p
tab = read.csv("best_mfc2.tree_table")
source("plot_tree_gg.R")
p
svg("best_mfc2.svg")
p
dev.off()
quit()
tab = read.csv("best_mfc2.tree_table")
source("plot_tree_gg.R")
p
tab = read.csv("best_mfc2.tree_table")
source("plot_tree_gg.R")
p
tab = read.csv("best_mfc2.tree_table")
source("plot_tree_gg.R")
p
svg("best_mfc2.svg")
p
dev.off()
tab = read.csv("best_mfc2.2nd.tree_table")
source("plot_tree_gg.R")
p
tab = read.csv("best_mfc2.2nd.tree_table")
source("plot_tree_gg.R")
p
svg("best_mfc2.2nd.svg")
p
dev.off()
tab = read.csv("best_mfc2.3rd.tree_table")
svg("best_mfc2.2nd.svg")
dev.off()
tab = read.csv("best_mfc2.2nd.tree_table")
source("plot_tree_gg.R")
svg("best_mfc2.2nd.svg")
p
dev.off()
tab = read.csv("best_mfc2.3rd.tree_table")
source("plot_tree_gg.R")
tab = read.csv("best_mfc2.2nd.tree_table")
source("plot_tree_gg.R")
p
tab = read.csv("best_mfc2.2nd.tree_table")
source("plot_tree_gg.R")
p
tab = read.csv("best_mfc2.3rd.tree_table")
source("plot_tree_gg.R")
p
tab = read.csv("best_mfc2.2nd.tree_table")
source("plot_tree_gg.R")
p
tab = read.csv("best_mfc2.2nd.tree_table")
source("plot_tree_gg.R")
p
tab = read.csv("best_mfc2.2nd.tree_table")
source("plot_tree_gg.R")
p
svg("best_mfc2.2nd.svg")
p
dev.off()
tab = read.csv("best_mfc2.3rd.tree_table")
source("plot_tree_gg.R")
p
tab = read.csv("best_mfc2.3rd.tree_table")
source("plot_tree_gg.R")
p
tab = read.csv("best_mfc2.3rd.tree_table")
source("plot_tree_gg.R")
p
tab = read.csv("best_mfc2.3rd.tree_table")
source("plot_tree_gg.R")
p
svg("best_mfc2.3rd.svg")
p
dev.off()
quit()
tab = read.csv("best_mfc2.tree_table")
source("plot_tree_gg.R")
p
quit()
nstates = read.csv("num_states_mfc2.tab",sep=" ")
plot(nstates$nstates_par_obs,nstates$nstates)
plot(nstates$nstates_par_obs,nstates$nstates,xlim = c(35,55),ylim=c(35,55))
plot(nstates$nstates,nstates$nstates_par_obs,xlim = c(35,55),ylim=c(35,55))
nstates
plot(nstates$nstates,nstates$nstates_par_obs,xlim = c(35,55),ylim=c(35,55),pch=20)
abline(a = 0, b = 1, col = "red", lty = 2) 
plot(nstates$nstates,nstates$nstates_par_obs,xlim = c(35,55),ylim=c(35,55),pch=20,xlab="# total char. states", ylab = "# inferred ancestor states")
abline(a = 0, b = 1, col = "red", lty = 1 
)
abline(a = 0, b = 1, col = "black", lty = 1)
abline(a = 0, b = 1, col = "black", lty = 2)
plot(nstates$nstates,nstates$nstates_par_obs,xlim = c(35,55),ylim=c(35,55),pch=20,xlab="# total char. states", ylab = "# inferred ancestor states")
abline(a = 0, b = 1, col = "black", lty = 2)
plot(nstates$nstates,nstates$nstates_par_obs,xlim = c(35,55),ylim=c(35,55),pch=20,xlab="# total char. states", ylab = "# inferred ancestor states", cex=4)
abline(a = 0, b = 1, col = "black", lty = 2)
plot(nstates$nstates,nstates$nstates_par_obs,xlim = c(35,55),ylim=c(35,55),pch=20,xlab="# total char. states", ylab = "# inferred ancestor states", cex=2)
abline(a = 0, b = 1, col = "black", lty = 2)
svg("fig5.svg")
dev.off()
svg("fig5.svg")
plot(nstates$nstates,nstates$nstates_par_obs,xlim = c(35,55),ylim=c(35,55),pch=20,xlab="# total char. states", ylab = "# inferred ancestor states", cex=2)
abline(a = 0, b = 1, col = "black", lty = 2)
dev.off()
quit(0
quit()
tab = read.csv("best_mfc2.tree_table")
source("plot_tree_gg.R")
p
tab = read.csv("best_mfc2.tree_table")
source("plot_tree_gg.R")
p
tab = read.csv("best_mfc2.tree_table")
source("plot_tree_gg.R")
p
tab = read.csv("best_mfc2.tree_table")
source("plot_tree_gg.R")
p
svg("fig4.svg")
source("plot_tree_gg.R")
p
dev.off()
p
tab = read.csv("best_mfc2.2nd.tree_table")
source("plot_tree_gg.R")
p
tab = read.csv("best_mfc2.2nd.tree_table")
source("plot_tree_gg.R")
p
svg("best_mfc2.2nd.svg")
p
dev.off()
tab = read.csv("best_mfc2.3rd.tree_table")
source("plot_tree_gg.R")
p
tab = read.csv("best_mfc2.3rd.tree_table")
source("plot_tree_gg.R")
p
tab = read.csv("best_mfc2.3nd.tree_table")
tab = read.csv("best_mfc2.2nd.tree_table")
source("plot_tree_gg.R")
p
svg("best_mfc2.3rd.svg")
p
dev.off()
quit()
tab = read.csv("best_mfc2.tree_table")
svg("fig5.svg")
plot(nstates$nstates,nstates$nstates_par_obs,xlim = c(35,55),ylim=c(35,55),pch=20,xlab="# total char. states", ylab = "# inferred ancestor states", cex=2)
abline(a = 0, b = 1, col = "black", lty = 2)
dev.off()
plot(nstates$nstates,nstates$nstates_par_obs,xlim = c(35,55),ylim=c(35,55),pch=20,xlab="# total char. states", ylab = "# inferred ancestor states", cex=2)
abline(a = 0, b = 1, col = "black", lty = 2)
tab = read.csv("best_mfc2.2nd.tree_table")
tab = read.csv("best_mfc2.tree_table")
source("plot_tree_gg.R")
p
tab = read.csv("best_mfc2.tree_table")
source("plot_tree_gg.R")
p
svg("best_mfc2.svg")
p
dev.off()
tab = read.csv("best_mfc2.2nd.tree_table")
source("plot_tree_gg.R")
p
tab = read.csv("best_mfc2.2nd.tree_table")
source("plot_tree_gg.R")
p
tab = read.csv("best_mfc2.2nd.tree_table")
source("plot_tree_gg.R")
p
tab = read.csv("best_mfc2.2nd.tree_table")
source("plot_tree_gg.R")
p
svg("best_mfc2.2nd.svg")
p
dev.off()
tab = read.csv("best_mfc2.3rd.tree_table")
source("plot_tree_gg.R")
p
tab = read.csv("best_mfc2.3rd.tree_table")
source("plot_tree_gg.R")
p
svg("best_mfc2.3rd.svg")
p
dev.off()
tab = read.csv("best_mfc2.4th.tree_table")
tab = read.csv("best_mfc2.4th.tree_table")
source("plot_tree_gg.R")
p
tab = read.csv("best_mfc2.4th.tree_table")
source("plot_tree_gg.R")
p
p
svg("best_mfc2.4th.svg")
p
dev.off()
tab = read.csv("best_mfc2.tree_table")
source("plot_tree_gg.R")
p
svg("best_mfc2.svg")
p
dev.off()
quit()
